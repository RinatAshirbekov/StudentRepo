@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>Use this area to provide additional information.</p>
<p>30.04.2020 работа с github:</p>

<h2>Команды в github: </h2>
<h4>
    Навигация
</h4>
<ul>
    <li><b>clear</b> - очистить консоль (не относится к навигации)</li>
    <li><b>pwd</b> - показать текущий каталог</li>
    <li><b>ls</b> - показать файлы в данной папке, кроме скрытых</li>
    <li><b>ls -f</b> - показать файлы в данной папке, включая и скрытые</li>
    <li><b>cd d:/</b> - перейти в конкретный каталог</li>
    <li><b>cd -</b> - вернуться назад</li>
    <li><b>cd ..</b> - выйти на 1 уровень вверх</li>
    <li><b>cd ../..</b> - выйти на 2 уровня вверх</li>
</ul>
<h4>
    Создание каталогов
</h4>
<ul>
    <li><b>mkdir</b> - cоздать папку</li>
    <li><b>cd !$</b> - перейти в только что созданную папку</li>
    <li><b>mkdir -p {app1,app2}</b> - cоздать сразу несколько папок</li>
    <li><b>mkdir -p app/{css,js}</b> - cоздать сразу несколько вложенных папок</li>
</ul>
<h4>
    Создание файлов
</h4>
<ul>
    <li><b>touch index.html</b> - cоздать файл index.html</li>
    <li><b>touch app/{css/main.css,js/main.js,index.html}</b> - cоздать сразу несколько файлов, никаких лишних пробелов быть не должно</li>
</ul>
<h4>
    Удаление файлов
</h4>
<ul>
    <li><b>touch</b> - cоздать файл index.html</li>
    <li><b>trm test</b> - удалить пустую папку test</li>
    <li><b>rm -r test</b> - удалить папку test с файлами внутри неё</li>
</ul>
<h4>
    Перемещение файлов
</h4>
<ul>
    <li><b>mv app1/*.* app2</b> - переместить все файлы из папки app1 в папку app2</li>
</ul>
<h4>
    Основные команды
</h4>
<ul>
    <li><b>git init</b> - создадим основу Git-репозитория.</li>
    <li><b>git status</b> - важная команда, просмотр состояния текущей ветки</li>
    <li>
        <b>git branch dev-rinat</b> - создание ветки с именем dev-rinat
    </li>
    <li>
        <b>git checkout dev-rinat</b> - переход на ветку dev-rinat
    </li>
    <li><b>git checkout -b dev-rinat</b> - создание новой ветки с имененем dev-rinat и переход на неё</li>
    <li><b>git checkout -branch dev-rinat</b> - аналогично предыдущему варианту</li>
    <li>
        <b>git add .</b>
        - добавить измененные файлы в список отслеживаемых, были красными стали зелёными, тем самым мы проиндексируем файлы, точка говорит добавить
        в индекс все файлы, но можно указать конкретные файлы, файлы с определенным расширением
    </li>
    <li>
        <b>git commit -m "add second phone number"</b>
        - сделать коммит, закоммиться, фиксация изменений, то есть когда все изменения проиндексированы, мы должны их зафиксировать (закоммитить),
        т.е. процесс работы с гитом локально представляет собой цикл: поработали над проектом - добавили в индекс - закоммитили
    </li>
    <li><b>git branch</b> - </li>
    <li>
        <b>git branch -v</b>
        - просмотр последних коммитов на каждой из веток,
        опции --merged и --no-merged могут отфильтровать список для вывода только тех веток, которые слиты или еще не слиты в текущую ветку,
        чтобы посмотреть те ветки, которые вы уже слили с текущей, можно выполнить команду <b>git branch --merged</b>
    </li>
    <li><b>git push origin dev-rinat</b> - отправка всех коммитов на удаленный сервер в ветку dev-rinat, если нет ветки у даленном репозитории - она создатся </li>
    <li><b>git checkout master</b> - перейти в существующую ветку с именем master</li>
    <li><b>git pull origin master</b> - стянуть изменения с удаленной ветки с именем master, тоже самое что "вытянуть"</li>
    <li><b>:ws</b> - выйти из текущей операции</li>
    <li><b>git merge master</b> - слиться с веткой мастер, то есть стянуть изменения в текущую ветку</li>
    <li><b>:wq</b> - после слияния если всё норм - без конфликтов то подтвердить действие</li>
</ul>
<h2>
    Действия после слияния:
</h2>
<p>1. build solution</p>
<p>2. запуск проекта</p>
<p>1. возможно будет ругаться контекст данных, это значит были миграции и надо обновить БД</p>
